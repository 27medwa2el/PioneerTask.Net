@using DevExtremeAspNetCoreApp1.Models
<h2>View1</h2>
<div id="data-grid-demo">
    @(Html.DevExtreme().DataGrid<DevExtremeAspNetCoreApp1.Models.Customer>()
        .DataSource(ds => ds.Mvc()
        .Controller("Cust")
        .LoadAction("Get")
        .InsertAction("Post")
        .UpdateAction("Put")
        .DeleteAction("Delete")
        .Key("Id")
        )
        .RemoteOperations(true)
        .Columns(columns =>
        {

            

            columns.AddFor(m => m.Name);

            columns.AddFor(m => m.PhoneNumber);

            columns.AddFor(m => m.Address);

           

            columns.AddFor(m => m.CountryId).SetCellValue("setCountryValue").Lookup(lookup => lookup
            .DataSource(ds => ds.WebApi().Controller("Cust").LoadAction("CountriesLookup").Key("Value"))
            .ValueExpr("Value")
            .DisplayExpr("Text")
            );
            columns.AddFor(m => m.CityId)
            .Lookup(lookup => lookup
            .DataSource("getCities")
            .DisplayExpr("CityName")
            .ValueExpr("CityId")
            );
        })
        .Editing(e => e
        .AllowAdding(true)
        .AllowUpdating(true)
        .AllowDeleting(true)
        )
        )
</div>
<script>
    function onEditorPreparing(e) {
        if (e.parentType === "dataRow" && e.dataField === "CityId") {
            e.editorOptions.disabled = (typeof e.row.data.CountryId !== "number");
        }
    }

    function getCities(options) {
    return {
        store: DevExpress.data.AspNet.createStore({
            key: "CityId",
                loadUrl: "@Url.Action("Get", "DataGridCitiesByCountry", new { httproute = true })"
        }),
        filter: options.data ? ["CountryId", "=", options.data.CountryId] : null
    };
}

    function setCountryValue(rowData, value) {
        rowData.CountryId = value;
        rowData.CityId = null;
    }
</script>
